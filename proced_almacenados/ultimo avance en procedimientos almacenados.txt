-- PROCEDIMIENTO ALMACENADO PARA CONSULTAR BLOQUES DISPONIBLES PROFE


CREATE OR REPLACE FUNCTION NHMR_CONSULTA_BLOQUES_DISPO(
    CODIGO_F NUMBER
)
RETURN VARCHAR2
IS  
    NOMBRE_PROFESOR_F VARCHAR2(50);
    BLOQUE_DISPONIBLE_F VARCHAR2(50);
    RESULTADO VARCHAR2(200);

BEGIN

    SELECT CONCAT(CONCAT(P.NOMBRE,' '),P.APELLIDO_PATERNO) ,
           CONCAT(CONCAT(D.NOMBRE_DIA,'-'), B.CODIGO_BLOQUE)
           
    INTO NOMBRE_PROFESOR_F,
         BLOQUE_DISPONIBLE_F
                 
    FROM NHMR_PROFESOR P JOIN NHMR_PROFESOR_BLOQUES_DISPONIBLES B ON P.CODIGO = B.CODIGO_PROFESOR
        JOIN NHMR_DIA D ON B.CODIGO_DIA = D.CODIGO_DIA 
        JOIN NHMR_BLOQUE BD ON B.CODIGO_BLOQUE = BD.CODIGO_BLOQUE
    WHERE (P.CODIGO = CODIGO_F);

    RESULTADO:= NOMBRE_PROFESOR_F || ' - ' || BLOQUE_DISPONIBLE_F;

    RETURN RESULTADO;

END;

--ELIMINAR FUNCION
DROP FUNCTION NHMR_CONSULTA_BLOQUES_DISPO;

SELECT NHMR_CONSULTA_BLOQUES_DISPO(1)
FROM DUAL;



--CONSULTA PARA OBTENER BLOQUES DISPONIBLES SEGUN EL CODIGO DEL PROFESOR

SELECT CONCAT(CONCAT(P.NOMBRE,' '),P.APELLIDO_PATERNO) AS NOMBRE_PROFESOR, CONCAT(CONCAT(D.NOMBRE_DIA,'-'), B.CODIGO_BLOQUE) AS BLOQUES_DISPONIBLES
       
FROM 
    NHMR_PROFESOR P JOIN NHMR_PROFESOR_BLOQUES_DISPONIBLES B ON P.CODIGO = B.CODIGO_PROFESOR
JOIN NHMR_DIA D ON B.CODIGO_DIA = D.CODIGO_DIA 
JOIN NHMR_BLOQUE BD ON B.CODIGO_BLOQUE = BD.CODIGO_BLOQUE
WHERE (P.CODIGO=1);


--PRUEBA

    SELECT CONCAT(CONCAT(CONCAT(CONCAT(P.NOMBRE,' '),P.APELLIDO_PATERNO),' '),CONCAT(CONCAT(D.NOMBRE_DIA,'-'), B.CODIGO_BLOQUE)) AS BLOQUES_DISPONIBLES
                 
    FROM NHMR_PROFESOR P JOIN NHMR_PROFESOR_BLOQUES_DISPONIBLES B ON P.CODIGO = B.CODIGO_PROFESOR
        JOIN NHMR_DIA D ON B.CODIGO_DIA = D.CODIGO_DIA 
        JOIN NHMR_BLOQUE BD ON B.CODIGO_BLOQUE = BD.CODIGO_BLOQUE;

-- COMO PROCEDIMIENTO ALMACENADO


CREATE OR REPLACE PROCEDURE NHMR_CONSULTA_BLOQUES_DISPO(
    CODIGO_F NUMBER
)
IS  
BEGIN

    SELECT CONCAT(CONCAT(P.NOMBRE,' '),P.APELLIDO_PATERNO),
           CONCAT(CONCAT(D.NOMBRE_DIA,'-'), B.CODIGO_BLOQUE)

                 
    FROM NHMR_PROFESOR P JOIN NHMR_PROFESOR_BLOQUES_DISPONIBLES B ON P.CODIGO = B.CODIGO_PROFESOR
        JOIN NHMR_DIA D ON B.CODIGO_DIA = D.CODIGO_DIA 
        JOIN NHMR_BLOQUE BD ON B.CODIGO_BLOQUE = BD.CODIGO_BLOQUE
    WHERE (CODIGO = CODIGO_F);


END;


--PROBAR CON CURSORES COMO FUNCION

CREATE OR REPLACE FUNCTION NHMR_CONSULTA_BLOQUES_DISPO(
    CODIGO_F NUMBER
)
RETURN VARCHAR2
IS  
    CURSOR c_bloques IS
        SELECT CONCAT(CONCAT(P.NOMBRE, ' '), P.APELLIDO_PATERNO) AS NOMBRE_PROFESOR,
               CONCAT(CONCAT(D.NOMBRE_DIA, '-'), B.CODIGO_BLOQUE) AS BLOQUE_DISPONIBLE
        FROM NHMR_PROFESOR P
        JOIN NHMR_PROFESOR_BLOQUES_DISPONIBLES B ON P.CODIGO = B.CODIGO_PROFESOR
        JOIN NHMR_DIA D ON B.CODIGO_DIA = D.CODIGO_DIA
        JOIN NHMR_BLOQUE BD ON B.CODIGO_BLOQUE = BD.CODIGO_BLOQUE
        WHERE P.CODIGO = CODIGO_F;
    
    NOMBRE_PROFESOR_F VARCHAR2(50);
    BLOQUE_DISPONIBLE_F VARCHAR2(50);
    RESULTADO VARCHAR2(2000);  -- Variable para almacenar todos los bloques disponibles

BEGIN
    RESULTADO := '';  -- Inicializamos la variable para almacenar los resultados concatenados

    FOR rec IN c_bloques LOOP
        -- Concatenamos el nombre y el bloque disponible en la cadena RESULTADO
        RESULTADO := RESULTADO || rec.NOMBRE_PROFESOR || ' - ' || rec.BLOQUE_DISPONIBLE || ', ';
    END LOOP;

    -- Si se encontraron resultados, eliminamos la Ãºltima coma y espacio extra
    IF LENGTH(RESULTADO) > 0 THEN
        RESULTADO := RTRIM(RESULTADO, ', ');
    ELSE
        RESULTADO := 'No se encontraron bloques disponibles.';
    END IF;

    RETURN RESULTADO;

END;

-- CURSORES CON PROCEDIMIENTOS ALMACENADOS

CREATE OR REPLACE PROCEDURE NHMR_CONSULTA_BLOQUES_DISPO(
    CODIGO_P NUMBER
)
IS  
    CURSOR BLOQUES_DISPO IS
        SELECT CONCAT(CONCAT(P.NOMBRE, ' '), P.APELLIDO_PATERNO) AS NOMBRE_PROFESOR,
               CONCAT(CONCAT(D.NOMBRE_DIA, '-'), B.CODIGO_BLOQUE) AS BLOQUE_DISPONIBLE
        FROM NHMR_PROFESOR P
        JOIN NHMR_PROFESOR_BLOQUES_DISPONIBLES B ON P.CODIGO = B.CODIGO_PROFESOR
        JOIN NHMR_DIA D ON B.CODIGO_DIA = D.CODIGO_DIA
        JOIN NHMR_BLOQUE BD ON B.CODIGO_BLOQUE = BD.CODIGO_BLOQUE
        WHERE P.CODIGO = CODIGO_P;

BEGIN

    FOR i IN BLOQUES_DISPO LOOP
        DBMS_OUTPUT.PUT_LINE('Profesor: ' || i.NOMBRE_PROFESOR || ' - Bloque: ' || i.BLOQUE_DISPONIBLE);
    END LOOP;
END;



--PROBAR EL PROCEDIMIENTO ALMACENADO

BEGIN
    NHMR_CONSULTA_BLOQUES_DISPO(2);
END;

------------------------------------------------
--VER EL BLOQUE-DIA DE LAS SECCIONES SEGUN SU CODIGO Y NOMBRE CURSO

SELECT CONCAT(CONCAT(D.NOMBRE_DIA,' - '), B.CODIGO_BLOQUE)
FROM NHMR_SECCION S JOIN NHMR_SECCION_BLOQUE_DIA BD ON S.CODIGO = BD.CODIGO_SECCION AND S.CODIGO_CURSO = BD.CODIGO_CURSO
                    JOIN NHMR_DIA D ON BD.CODIGO_DIA = D.CODIGO_DIA
                    JOIN NHMR_BLOQUE B ON BD.CODIGO_BLOQUE = B.CODIGO_BLOQUE
WHERE(S.CODIGO = 'S1') AND (S.CODIGO_CURSO = 'INF-113');

---- CREAR PROCEDIMIENTO

CREATE OR REPLACE PROCEDURE NHMR_CONSULTA_BLOQUE_DIA_SECCION(
    CODIGO_P VARCHAR2,
    CODIGO_CURSO_P VARCHAR2
)
IS  
    CURSOR SECCION_BLOQUE_DIA IS
        SELECT D.NOMBRE_DIA AS NOMBRE_DIA, B.CODIGO_BLOQUE AS BLOQUE
        FROM NHMR_SECCION S JOIN NHMR_SECCION_BLOQUE_DIA BD ON S.CODIGO = BD.CODIGO_SECCION AND S.CODIGO_CURSO = BD.CODIGO_CURSO
                    JOIN NHMR_DIA D ON BD.CODIGO_DIA = D.CODIGO_DIA
                    JOIN NHMR_BLOQUE B ON BD.CODIGO_BLOQUE = B.CODIGO_BLOQUE
        WHERE(S.CODIGO = CODIGO_P) AND (S.CODIGO_CURSO = CODIGO_CURSO_P);

BEGIN

    FOR i IN SECCION_BLOQUE_DIA LOOP
        DBMS_OUTPUT.PUT_LINE('Dia: ' || i.NOMBRE_DIA || ' - Bloque: ' || i.BLOQUE);
    END LOOP;
END;

-- PROBAR PROCEDIMIENTO

BEGIN 
    NHMR_CONSULTA_BLOQUE_DIA_SECCION('S1','INF-113');
END;
