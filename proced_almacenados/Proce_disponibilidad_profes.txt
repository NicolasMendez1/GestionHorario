-----CONSULTA INICIAL-------
--CONSULTA PARA OBTENER BLOQUES DISPONIBLES SEGUN EL CODIGO DEL PROFESOR

SELECT CONCAT(CONCAT(P.NOMBRE,' '),P.APELLIDO_PATERNO) AS NOMBRE_PROFESOR, CONCAT(CONCAT(D.NOMBRE_DIA,'-'), B.CODIGO_BLOQUE) AS BLOQUES_DISPONIBLES,
        BD.HORA_INICIO, BD.HORA_TERMINO
FROM 
    NHMR_PROFESOR P JOIN NHMR_PROFESOR_BLOQUES_DISPONIBLES B ON P.CODIGO = B.CODIGO_PROFESOR
JOIN NHMR_DIA D ON B.CODIGO_DIA = D.CODIGO_DIA 
JOIN NHMR_BLOQUE BD ON B.CODIGO_BLOQUE = BD.CODIGO_BLOQUE
WHERE (P.CODIGO=1);


--PRUEBA

    SELECT CONCAT(CONCAT(CONCAT(CONCAT(P.NOMBRE,' '),P.APELLIDO_PATERNO),' '),CONCAT(CONCAT(D.NOMBRE_DIA,'-'), B.CODIGO_BLOQUE)) AS BLOQUES_DISPONIBLES
                 
    FROM NHMR_PROFESOR P JOIN NHMR_PROFESOR_BLOQUES_DISPONIBLES B ON P.CODIGO = B.CODIGO_PROFESOR
        JOIN NHMR_DIA D ON B.CODIGO_DIA = D.CODIGO_DIA 
        JOIN NHMR_BLOQUE BD ON B.CODIGO_BLOQUE = BD.CODIGO_BLOQUE;



-----------------------------------------------------------------------------------------------------------------
--PROBAR CON CURSORES COMO FUNCION

CREATE OR REPLACE FUNCTION NHMR_CONSULTA_BLOQUES_DISPO(
    CODIGO_F NUMBER
)
RETURN VARCHAR2
IS  
    CURSOR c_bloques IS
        SELECT CONCAT(CONCAT(P.NOMBRE, ' '), P.APELLIDO_PATERNO) AS NOMBRE_PROFESOR,
               CONCAT(CONCAT(D.NOMBRE_DIA, '-'), B.CODIGO_BLOQUE) AS BLOQUE_DISPONIBLE
        FROM NHMR_PROFESOR P
        JOIN NHMR_PROFESOR_BLOQUES_DISPONIBLES B ON P.CODIGO = B.CODIGO_PROFESOR
        JOIN NHMR_DIA D ON B.CODIGO_DIA = D.CODIGO_DIA
        JOIN NHMR_BLOQUE BD ON B.CODIGO_BLOQUE = BD.CODIGO_BLOQUE
        WHERE P.CODIGO = CODIGO_F;
    
    NOMBRE_PROFESOR_F VARCHAR2(50);
    BLOQUE_DISPONIBLE_F VARCHAR2(50);
    RESULTADO VARCHAR2(2000);  -- Variable para almacenar todos los bloques disponibles

BEGIN
    RESULTADO := '';  -- Inicializamos la variable para almacenar los resultados concatenados

    FOR rec IN c_bloques LOOP
        -- Concatenamos el nombre y el bloque disponible en la cadena RESULTADO
        RESULTADO := RESULTADO || rec.NOMBRE_PROFESOR || ' - ' || rec.BLOQUE_DISPONIBLE || ', ';
    END LOOP;

    -- Si se encontraron resultados, eliminamos la Ãºltima coma y espacio extra
    IF LENGTH(RESULTADO) > 0 THEN
        RESULTADO := RTRIM(RESULTADO, ', ');
    ELSE
        RESULTADO := 'No se encontraron bloques disponibles.';
    END IF;

    RETURN RESULTADO;

END;

--------------------------------------------------
-- CURSORES CON PROCEDIMIENTOS ALMACENADOS-------
-----------------------------------------------------

CREATE OR REPLACE PROCEDURE NHMR_CONSULTA_BLOQUES_DISPO(
    CODIGO_F NUMBER
)
IS  
    CURSOR BLOQUES_DISPO IS
        SELECT CONCAT(CONCAT(P.NOMBRE, ' '), P.APELLIDO_PATERNO) AS NOMBRE_PROFESOR,
               CONCAT(CONCAT(D.NOMBRE_DIA, '-'), B.CODIGO_BLOQUE) AS BLOQUE_DISPONIBLE
        FROM NHMR_PROFESOR P
        JOIN NHMR_PROFESOR_BLOQUES_DISPONIBLES B ON P.CODIGO = B.CODIGO_PROFESOR
        JOIN NHMR_DIA D ON B.CODIGO_DIA = D.CODIGO_DIA
        JOIN NHMR_BLOQUE BD ON B.CODIGO_BLOQUE = BD.CODIGO_BLOQUE
        WHERE P.CODIGO = CODIGO_F;

BEGIN

    FOR i IN BLOQUES_DISPO LOOP
        DBMS_OUTPUT.PUT_LINE('Nombre Profesor: ' || i.NOMBRE_PROFESOR || ' - Bloque: ' || i.BLOQUE_DISPONIBLE);
    END LOOP;
END;

--PROBAR EL PROCEDIMIENTO ALMACENADO

BEGIN
    NHMR_CONSULTA_BLOQUES_DISPO(2);
END;




