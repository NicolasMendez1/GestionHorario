---------------------------------------------------
----PROCEDIMIENTOS CRUD PARA SECCION BLOQUE DIA----
---------------------------------------------------

-----------------------------------------------------
------------INSERTAR SECCION BLOQUE DIA------------------
-----------------------------------------------------


CREATE OR REPLACE PROCEDURE NHMR_INSERTAR_SECCION_BLOQUE_DIA(
    CODIGO_SECCION_P VARCHAR2,
    CODIGO_CURSO_P VARCHAR2,
    CODIGO_DIA_P NUMBER,
    CODIGO_BLOQUE_P NUMBER,
    ES_BLOQUE_DE_LABORATORIO_P NUMBER
)
IS    
-- CREAR VARIABLES CONTENEDORAS
    SALA_OCUPADA NUMBER;
    PROFESOR_OCUPADO NUMBER;
    CODIGO_PROFESOR NUMBER;
    CODIGO_SALA_CATEDRA VARCHAR2(50);
    CODIGO_SALA_LABORATORIO VARCHAR2(50);
BEGIN
    -- SACAR CODIGO DEL PROFE, SALA CATEDRA Y LABORATORIO
    SELECT CODIGO_PROFESOR, CODIGO_SALA_CATEDRA, CODIGO_SALA_LABORATORIO
    INTO CODIGO_PROFESOR, CODIGO_SALA_CATEDRA, CODIGO_SALA_LABORATORIO
    FROM NHMR_SECCION
    WHERE CODIGO = CODIGO_SECCION_P AND CODIGO_CURSO = CODIGO_CURSO_P;

    -- VER OCUPACION DEL PROFE
    PROFESOR_OCUPADO := NHMR_DISP_PROFE_BLOQUE(CODIGO_PROFESOR, CODIGO_DIA_P, CODIGO_BLOQUE_P);
    IF PROFESOR_OCUPADO = 1 THEN
        RAISE_APPLICATION_ERROR(-20002, 'EL PROFESOR YA ESTÁ ASIGNADO EN ESTE BLOQUE-DIA');
    END IF;

    -- VERIFICAR OCUPACION SALA CATEDRA
 
    SALA_OCUPADA := NHMR_DISP_SALA_BLOQUE(CODIGO_SALA_CATEDRA, CODIGO_DIA_P, CODIGO_BLOQUE_P);
       IF SALA_OCUPADA = 1 THEN
           RAISE_APPLICATION_ERROR(-20003, 'SALA CATEDRA OCUPADA EN ESTE BLOQUE-DIA.');
       END IF;


    -- VERIFICAR OCUPACION SALA LABORATORIO
    SALA_OCUPADA := NHMR_DISP_SALA_BLOQUE(CODIGO_SALA_LABORATORIO, CODIGO_DIA_P, CODIGO_BLOQUE_P);
        IF SALA_OCUPADA = 1 THEN
            RAISE_APPLICATION_ERROR(-20004, 'SALA LABORATORIO OCUPADA EN ESTE BLOQUE-DIA.');
        END IF;

    -- VERIFICAR SECCION EN BLOQUE-DIA
    IF NHMR_CONSULTA_SECCION_BLOQUE_DIA(CODIGO_SECCION_P,CODIGO_CURSO_P,CODIGO_DIA_P,CODIGO_BLOQUE_P,ES_BLOQUE_DE_LABORATORIO_P) = 0 THEN
        INSERT INTO NHMR_SECCION_BLOQUE_DIA(CODIGO_SECCION, CODIGO_CURSO, CODIGO_DIA, CODIGO_BLOQUE, ES_BLOQUE_DE_LABORATORIO)
            VALUES (CODIGO_SECCION_P, CODIGO_CURSO_P, CODIGO_DIA_P, CODIGO_BLOQUE_P, ES_BLOQUE_DE_LABORATORIO_P);
    ELSE
        RAISE_APPLICATION_ERROR(-20001, 'ESTA SECCION YA FUE ASIGNADA');
    END IF;
END;

--PROBAR EL PROCEDIMIENTO
BEGIN
    NHMR_INSERTAR_SECCION_BLOQUE_DIA('S1','INF-113',1,12,1);
END;

---------------------------------------------
-----------INSERTAR CON GH-------------------
---------------------------------------------

CREATE OR REPLACE PROCEDURE GH_INSERTAR_SECCION_BLOQUE_DIA(
    CODIGO_SECCION_P VARCHAR2,
    CODIGO_CURSO_P VARCHAR2,
    CODIGO_DIA_P NUMBER,
    CODIGO_BLOQUE_P NUMBER,
    ES_BLOQUE_DE_LABORATORIO_P NUMBER
)
IS    
-- CREAR VARIABLES CONTENEDORAS
    SALA_OCUPADA NUMBER;
    PROFESOR_OCUPADO NUMBER;
    CODIGO_PROFESOR NUMBER;
    CODIGO_SALA_CATEDRA VARCHAR2(50);
    CODIGO_SALA_LABORATORIO VARCHAR2(50);
BEGIN
    -- SACAR CODIGO DEL PROFE, SALA CATEDRA Y LABORATORIO
    SELECT CODIGO_PROFESOR, CODIGO_SALA_CATEDRA, CODIGO_SALA_LABORATORIO
    INTO CODIGO_PROFESOR, CODIGO_SALA_CATEDRA, CODIGO_SALA_LABORATORIO
    FROM GH_SECCION
    WHERE CODIGO = CODIGO_SECCION_P AND CODIGO_CURSO = CODIGO_CURSO_P;

    -- VER OCUPACION DEL PROFE
    PROFESOR_OCUPADO := GH_DISP_PROFE_BLOQUE(CODIGO_PROFESOR, CODIGO_DIA_P, CODIGO_BLOQUE_P);
    IF PROFESOR_OCUPADO = 1 THEN
        RAISE_APPLICATION_ERROR(-20002, 'EL PROFESOR YA ESTÁ ASIGNADO EN ESTE BLOQUE-DIA');
    END IF;

    -- VERIFICAR OCUPACION SALA CATEDRA
 
    SALA_OCUPADA := GH_DISP_SALA_BLOQUE(CODIGO_SALA_CATEDRA, CODIGO_DIA_P, CODIGO_BLOQUE_P);
       IF SALA_OCUPADA = 1 THEN
           RAISE_APPLICATION_ERROR(-20003, 'SALA CATEDRA OCUPADA EN ESTE BLOQUE-DIA.');
       END IF;


    -- VERIFICAR OCUPACION SALA LABORATORIO
    SALA_OCUPADA := GH_DISP_SALA_BLOQUE(CODIGO_SALA_LABORATORIO, CODIGO_DIA_P, CODIGO_BLOQUE_P);
        IF SALA_OCUPADA = 1 THEN
            RAISE_APPLICATION_ERROR(-20004, 'SALA LABORATORIO OCUPADA EN ESTE BLOQUE-DIA.');
        END IF;

    -- VERIFICAR SECCION EN BLOQUE-DIA
    IF GH_CONSULTA_SECCION_BLOQUE_DIA(CODIGO_SECCION_P,CODIGO_CURSO_P,CODIGO_DIA_P,CODIGO_BLOQUE_P,ES_BLOQUE_DE_LABORATORIO_P) = 0 THEN
        INSERT INTO GH_SECCION_BLOQUE_DIA(CODIGO_SECCION, CODIGO_CURSO, CODIGO_DIA, CODIGO_BLOQUE, ES_BLOQUE_DE_LABORATORIO)
            VALUES (CODIGO_SECCION_P, CODIGO_CURSO_P, CODIGO_DIA_P, CODIGO_BLOQUE_P, ES_BLOQUE_DE_LABORATORIO_P);
    ELSE
        RAISE_APPLICATION_ERROR(-20001, 'ESTA SECCION YA FUE ASIGNADA');
    END IF;
END;






-----------------------------------------------------
-----------------INSERTAR----------------------------
-----------------------------------------------------

CREATE OR REPLACE PROCEDURE NHMR_INSERTAR_SECCION_BLOQUE_DIA(
    CODIGO_SECCION_P VARCHAR2,
    CODIGO_CURSO_P VARCHAR2,
    CODIGO_DIA_P NUMBER,
    CODIGO_BLOQUE_P NUMBER,
    ES_BLOQUE_DE_LABORATORIO_P NUMBER,
    CODIGO_SALA_P VARCHAR2
)
IS    
BEGIN
        --VERIFICAR OCUPACION DE LA SALA
       IF NHMR_DISP_SALA_BLOQUE(CODIGO_SALA_P,CODIGO_DIA_P, CODIGO_BLOQUE_P) = 1 THEN
             RAISE_APPLICATION_ERROR(-20002, 'LA SALA YA ESTÁ OCUPADA EN ESTE BLOQUE-DIA');
       END IF;

       -- VERIFICAR SI LA SECCION YA FUE ASIGNADA
       IF NHMR_CONSULTA_SECCION_BLOQUE_DIA(CODIGO_SECCION_P,CODIGO_CURSO_P,CODIGO_DIA_P,CODIGO_BLOQUE_P,ES_BLOQUE_DE_LABORATORIO_P) = 0 THEN
            INSERT INTO NHMR_SECCION_BLOQUE_DIA(CODIGO_SECCION, CODIGO_CURSO, CODIGO_DIA, CODIGO_BLOQUE, ES_BLOQUE_DE_LABORATORIO)
                VALUES (CODIGO_SECCION_P, CODIGO_CURSO_P,CODIGO_DIA_P,CODIGO_BLOQUE_P,ES_BLOQUE_DE_LABORATORIO_P);
       ELSE
            RAISE_APPLICATION_ERROR(-20001, 'ESTA SECCION YA FUE ASIGNADA');

       END IF;
END;

--PROBAR EL PROCEDIMIENTO
BEGIN
    NHMR_INSERTAR_SECCION_BLOQUE_DIA('S4','INF-113',1,12,1,'DCI03');
END;


-----------------------------------------------------
----------ACTUALIZAR SECCION BLOQUE DIA--------------
-----------------------------------------------------



CREATE OR REPLACE PROCEDURE NHMR_ACTUALIZAR_SECCION_BLOQUE_DIA(
    CODIGO_SECCION_P VARCHAR2,
    CODIGO_CURSO_P VARCHAR2,
    CODIGO_DIA_P NUMBER,
    CODIGO_BLOQUE_P NUMBER,
    ES_BLOQUE_DE_LABORATORIO_P NUMBER
)
IS    
BEGIN
        UPDATE NHMR_SECCION_BLOQUE_DIA SET
            CODIGO_SECCION = CODIGO_SECCION_P,
            CODIGO_CURSO = CODIGO_CURSO_P,
            CODIGO_DIA = CODIGO_DIA_P,
            CODIGO_BLOQUE = CODIGO_BLOQUE_P,
            ES_BLOQUE_DE_LABORATORIO = ES_BLOQUE_DE_LABORATORIO_P
        WHERE(CODIGO_SECCION = CODIGO_SECCION_P) AND (CODIGO_CURSO = CODIGO_CURSO_P);
END;

----PROBAR ACTUALIZACION
BEGIN
    NHMR_ACTUALIZAR_SECCION_BLOQUE_DIA('S2', 'INF-113', 2,12,0);
END;

SELECT *
FROM NHMR_SECCION_BLOQUE_DIA;

-----------------------------------------------------
-------------ELIMINAR SECCION BLOQUE DIA-------------
-----------------------------------------------------
CREATE OR REPLACE PROCEDURE GH_ELIMINAR_SECCION_BLOQUE_DIA(
    CODIGO_SECCION_P VARCHAR2,
    CODIGO_CURSO_P VARCHAR2
)
IS    
BEGIN
    DELETE FROM GH_SECCION_BLOQUE_DIA
       WHERE(CODIGO_SECCION = CODIGO_SECCION_P) AND (CODIGO_CURSO = CODIGO_CURSO_P);
END;


-- PROBAR EL BORRAR
BEGIN
    GH_ELIMINAR_SECCION_BLOQUE_DIA('S2','INF-113');
END;

SELECT * 
FROM GH_SECCION_BLOQUE_DIA;

